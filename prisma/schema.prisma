// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guest {
  id            Int      @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String?  @unique
  telephone     String
  idDocument    String   @unique
  idDocumentType String  @default("Passport")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  reservations  Reservation[]
}

model Room {
  id              Int      @id @default(autoincrement())
  name            String   @unique
  description     String?
  price           Decimal  @db.Decimal(10, 2)
  capacity        Int
  beds            Int
  airConditioning Boolean  @default(false)
  status          RoomStatus @default(AVAILABLE)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  reservations    Reservation[]
}

model Reservation {
  id          Int      @id @default(autoincrement())
  guestId     Int
  roomId      Int
  startDate   DateTime
  endDate     DateTime
  status      ReservationStatus @default(RESERVED)
  totalAmount Decimal  @db.Decimal(10, 2)
  nights      Int
  specialRequests String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  guest       Guest    @relation(fields: [guestId], references: [id], onDelete: Cascade)
  room        Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

enum RoomStatus {
  AVAILABLE
  OCCUPIED
  MAINTENANCE
  CLEANING
}

enum ReservationStatus {
  RESERVED
  CHECKED_IN
  COMPLETED
  CANCELED
}